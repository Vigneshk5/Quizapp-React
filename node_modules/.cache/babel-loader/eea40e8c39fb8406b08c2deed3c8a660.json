{"ast":null,"code":"var _jsxFileName = \"/Users/vigneshk/Documents/web/react projects/quizapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const questions = [{\n    questionText: 'What is the capital of France?',\n    questionNo: '1',\n    answerOptions: [{\n      answerText: 'New York',\n      isCorrect: false\n    }, {\n      answerText: 'London',\n      isCorrect: false\n    }, {\n      answerText: 'Paris',\n      isCorrect: true\n    }, {\n      answerText: 'Dublin',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'Who is CEO of Tesla?',\n    questionNo: '2',\n    answerOptions: [{\n      answerText: 'Jeff Bezos',\n      isCorrect: false\n    }, {\n      answerText: 'Elon Musk',\n      isCorrect: true\n    }, {\n      answerText: 'Bill Gates',\n      isCorrect: false\n    }, {\n      answerText: 'Tony Stark',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'The iPhone was created by which company?',\n    questionNo: '3',\n    answerOptions: [{\n      answerText: 'Apple',\n      isCorrect: true\n    }, {\n      answerText: 'Intel',\n      isCorrect: false\n    }, {\n      answerText: 'Amazon',\n      isCorrect: false\n    }, {\n      answerText: 'Microsoft',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'How many Harry Potter books are there?',\n    questionNo: '4',\n    answerOptions: [{\n      answerText: '1',\n      isCorrect: false\n    }, {\n      answerText: '4',\n      isCorrect: false\n    }, {\n      answerText: '6',\n      isCorrect: false\n    }, {\n      answerText: '7',\n      isCorrect: true\n    }]\n  }];\n\n  function handleAnswerClick(isCorrect) {\n    // Check if correct answer is pressed. (See the hint on the left)\n    if (isCorrect) {\n      setScore(score => score + 1);\n    }\n\n    if (currentIndex === questions.length - 1) {\n      // quiz over\n      setQuizFinished(true);\n    } else {\n      setCurrentIndex(value => value + 1);\n    }\n  }\n\n  const [quizFinished, setQuizFinished] = useState(false);\n  const [score, setScore] = useState(0); // Create a state variable here [score, setScore]\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: quizFinished ?\n      /*#__PURE__*/\n\n      /* Change this hardcoded 1 to state variable score else */\n      _jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-section\",\n          children: [\"You scored \", score, \" out of \", questions.length, \" \\uD83E\\uDD73\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-count\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Question \", questions[currentIndex].questionNo]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 8\n              }, this), \"/\", questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-text\",\n              children: questions[currentIndex].questionText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer-section\",\n          children: questions[currentIndex].answerOptions.map(answer => {\n            return /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"butn\",\n                onClick: () => handleAnswerClick(answer.isCorrect),\n                children: answer.answerText\n              }, answer.answerText, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 18\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"uIbtGE6FLoHu6Jq+ng/MOXGtzkg=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","currentIndex","setCurrentIndex","questions","questionText","questionNo","answerOptions","answerText","isCorrect","handleAnswerClick","setScore","score","length","setQuizFinished","value","quizFinished","map","answer"],"sources":["/Users/vigneshk/Documents/web/react projects/quizapp/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './App.css'\n\nexport default function App() {\n\t\n\tconst [currentIndex, setCurrentIndex] = useState(0)\n\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'What is the capital of France?',\n             questionNo:'1',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\n\t\t\t\t{ answerText: 'London', isCorrect: false },\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is CEO of Tesla?',\n             questionNo:'2',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'The iPhone was created by which company?',\n            questionNo:'3',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How many Harry Potter books are there?',\n             questionNo:'4',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '1', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '7', isCorrect: true },\n\t\t\t],\n\t\t},\n\t]\n\n\tfunction handleAnswerClick(isCorrect) {\n\t\t// Check if correct answer is pressed. (See the hint on the left)\n        if(isCorrect){\n            setScore(\n                (score)=> score +1);\n        }\n\t\tif (currentIndex === questions.length - 1) {\n\t\t\t// quiz over\n\t\t\tsetQuizFinished(true)\n\t\t} else {\n\t\t\tsetCurrentIndex((value) => value + 1)\n\t\t}\n\t}\n\n\tconst [quizFinished, setQuizFinished] = useState(false)\n    const [score, setScore] = useState(0)\n\t// Create a state variable here [score, setScore]\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t<div className=\"content\">\n\t\t\t{quizFinished ? (\n\t\t\t\t/* Change this hardcoded 1 to state variable score else */\n\t\t\t\t<h1><div className=\"score-section\">\n\t\t\t\t\tYou scored {score} out of {questions.length} ðŸ¥³\n\t\t\t\t</div>\n\t\t\t\t</h1>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<h1><div className=\"question-section\">\n\t\t\t\t\t\t<div className=\"question-count\">\n\t\t\t\t\t\t\t<span>Question {questions[currentIndex].questionNo}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"question-text\">\n\t\t\t\t\t\t\t{questions[currentIndex].questionText}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t</h1>\n\t\t\t\t\t<div className=\"answer-section\">\n\t\t\t\t\t\t{questions[currentIndex].answerOptions.map((answer) => {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t            <h2>\n\t\t\t\t\t\t\t\t<button className='butn'\n\t\t\t\t\t\t\t\t\tonClick={()=>handleAnswerClick(answer.isCorrect)}\n\t\t\t\t\t\t\t\t\tkey={answer.answerText}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{answer.answerText}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t\t</div>\n\t)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}